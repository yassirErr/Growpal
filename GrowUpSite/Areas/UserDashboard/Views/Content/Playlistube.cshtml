
@model (IEnumerable<GrowUp.Model.Reactube> ReactubeList, int, int, int)

@{
    int insertedByOthersCount = ViewBag.InsertedByOthersCount ?? 0;
    int watchtubeCount = ViewBag.WatchtubeCount ?? 0;
}



@{
    ViewData["Title"] = "Playlistube";
}


<div class="page-content">

    <div class="container-fluid">
        <!-- Page-Title -->
        <div class="row">
            <div class="col-sm-12">
                <div class="page-title-box">
                    <div class="float-right">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a asp-area="UserDashboard" asp-controller="User" asp-action="index">GrowPal</a></li>
                           
                            <li class="breadcrumb-item active">Playlist</li>
                        </ol>
                    </div>
                    <h4 class="page-title">Playlist Table</h4>
                </div><!--end page-title-box-->
            </div><!--end col-->
        </div>
        <!-- end page title end breadcrumb -->

        <div class="col-lg-12">
            <div class="row">

                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">


                            @if (insertedByOthersCount > watchtubeCount)
                            {
                                <div class="alert alert-danger border-0" role="alert">
                                    <i class="mdi mdi-alert-outline alert-icon"></i>
                                    <strong> Warning : You Have 24 Hours </strong> You must complete watching as the same views that you have before the time runs out or <strong> Your content get Banned  </strong>.
                                </div>

                                <div class="alert alert-outline-warning alert-dismissible fade show" role="alert">
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true"><i class="mdi mdi-close"></i></span>
                                    </button>
                                    <strong> Info !</strong>You have to stop Videos running in playlist and complete the watching the list that you have.
                                </div>

                            }

                            
                            @if (ViewBag.StartTimer)
                            {
                                <p id="timer">0:00:00</p>

                            }

                            <div class="card-body bg-light chart-report-card">
                                <div class="row d-flex justify-content-between">

                                        <div class="col-lg-4">
                                            <div class="media">
                                                <i class="dripicons-preview report-main-icon bg-card text-dark mr-2"></i>                                      
                                                <div class="media-body align-self-center text-truncate">
                                        <h4 class="mt-0 mb-0 font-weight-semibold text-dark font-24">
                                                        @Model.Item3
                                                    </h4>
                                                <p class="text-dark font-weight-semibold mb-0 font-14">Watching</p>
                                            </div><!--end media-body-->
                                            </div><!--end media-->
                                        </div><!--end col-->


                                    <div class="col-lg-4">
                                        <div class="media">
                                            <i class="dripicons-rocket report-main-icon bg-card text-dark mr-2"></i>
                                            <div class="media-body align-self-center text-truncate">
                                                <h4 class="mt-0 mb-0 font-weight-semibold text-dark font-24">
                                                    @Model.Item4
                                                </h4>
                                                <p class="text-dark font-weight-semibold mb-0 font-14">Views</p>
                                            </div><!--end media-body-->
                                        </div><!--end media-->
                                    </div><!--end col-->

                                </div><!--end media-->
                            </div><!--end col-->
                         
                        </div><!--end row-->
                        

                            <div class="form-group row">
                            <label class="col-sm-2 col-form-label text-right" for="range-select">Selected range:</label>
                                <div class="col-sm-2">
                                <select class="custom-select" name="range" id="range-select">
                                    <option selected disabled hidden> Select Menu </option>
                                    <option value="1-2">1-5</option>
                                    <option value="1-5">1-10</option>
                                    <option value="1-8">1-15</option>
                                    <option value="1-10">1-20</option>
                                    <option value="1-15">1-25</option>
                                    </select>
                                </div>
                            </div>

                            <div class="table-responsive">
                                <table id="video-table" class="table table-bordered dt-responsive nowrap" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                                    <thead>
                                        <tr>
                                            <th>Content Name</th>
                                            <th>Links</th>
                                        </tr>
                                    </thead>


                                    @foreach (var obj in Model.ReactubeList)
                                    {
                                            <tbody>
                                                <tr>
                                                @if (obj.Content != null)
                                                {
                                                    <td>@obj.Content.Content_name</td>
                                                }
                                                else
                                                {
                                                    <td>(No content)</td>
                                                }
                                                    <td>
                                                        <a class="btn btn-primary" type="button" href="https://www.youtube.com/watch?v=@obj.ItemVideo" target="_blank" id="view-video-btn" onclick="handleClick(@obj.Id, '@obj.ItemVideo')">View Video</a>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        }
                                    
                                </table><!--end /table-->
                            </div><!--end /tableresponsive-->
                    </div><!--end card-body-->
                </div><!--end card-->
            </div> <!-- end col -->
        </div><!--end page-title-box-->
    </div><!--end col-->
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    // range selection
    $(document).ready(function () {
        $('#range-select').on('change', function () {
            var rangeValue = $(this).val();
            var url = '@Url.Action("Playlistube", "Content")?range=' + rangeValue;
            window.location.href = url;
        });
    });

    // add to watchtube table 
    function handleClick(reactubeId, videoLink) {
        $.ajax({
            url: '@Url.Action("AddToWatchtube", "Content")',
            type: 'POST',
            data: { reactubeId: reactubeId, videoLink: videoLink },
            success: function (data) {
                // find the button element
                var button = document.getElementById('view-video-btn');

                // create a new element for the success message
                var successMessage = document.createElement('div');
                successMessage.className = 'alert icon-custom-alert alert-outline-success alert-success-shadow';
                successMessage.role = 'alert';
                successMessage.innerHTML = '<i class="mdi mdi-check-all alert-icon"></i><div class="alert-text"><strong>Well done!</strong></div>';

                // replace the button with the success message
                button.parentNode.replaceChild(successMessage, button);

                // show an alert message
                alert("Video added to Watchtube");

                // Load a new page
                window.location.href = 'https://localhost:44382/UserDashboard/Content/Playlistube';
            },
            error: function () {
                alert("Error: Failed to add video to Watchtube");
            }
        });
    }

    // check timer counter and change UpdateStatusContent

    var timerElement = document.getElementById("timer");
    var startTime = localStorage.getItem("startTime");
    var isCountingStopped = false;

    if (!startTime || @insertedByOthersCount <= @watchtubeCount) {
        startTime = new Date().getTime();
        localStorage.setItem("startTime", startTime);
    }

    function updateTimer() {
        var currentTime = new Date().getTime();
        var elapsedSeconds = Math.floor((currentTime - startTime) / 1000);
        var hours = Math.floor(elapsedSeconds / 3600);
        var minutes = Math.floor((elapsedSeconds % 3600) / 60);
        var seconds = elapsedSeconds % 60;

        var timerText = hours + ":" + (minutes < 10 ? "0" : "") + minutes + ":" + (seconds < 10 ? "0" : "") + seconds;
        timerElement.innerText = timerText;

        if (hours >= 24 && !isCountingStopped) {
            clearInterval(timerInterval); // Stop the timer
            isCountingStopped = true;

            // Make an AJAX call to update the StatusContent to false
            $.ajax({
                url: '@Url.Action("UpdateStatusContent","Content")',
                type: 'POST',
                success: function (response) {
                    console.log('StatusContent updated successfully.');
                },
                error: function (error) {
                    console.error('Failed to update StatusContent:', error);
                }
            });
        }
    }

    var timerInterval = setInterval(updateTimer, 1000); // Update timer every 1 second

    updateTimer(); // Update timer immediately

</script>